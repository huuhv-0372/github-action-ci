version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=582523258971.dkr.ecr.ap-northeast-1.amazonaws.com/dev-js-jmbappserver-vw-view
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo Build started on `date`
      - echo ${REPOSITORY_URI}:latest
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 262972253311.dkr.ecr.ap-northeast-1.amazonaws.com
      - docker build -f Dockerfile -t ${REPOSITORY_URI}:latest .
      - docker tag $REPOSITORY_URI:latest ${REPOSITORY_URI}:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 582523258971.dkr.ecr.ap-northeast-1.amazonaws.com
      - docker push ${REPOSITORY_URI}:latest
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - echo Writing image definitions file...
      - printf '{"Version":"1.0","ImageURI":"%s"}' ${REPOSITORY_URI}:${IMAGE_TAG} > imageDetail.json
      #- printf '[{"name":"nodejs","imageUri":"%s"}]' ${REPOSITORY_URI}:${IMAGE_TAG} > imagedefinitions.json
artifacts:
  files: imageDetail.json

  #files: imagedefinitions.js
